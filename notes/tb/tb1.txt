
Der nächste Schritt muss sein, meine String Manipulation so weit zu
treiben, das ein erster simpler Console Log stattfindet.

Nebenbei gilt es, all die Konzepte aus dem Babel-Handbook genauer zu
verstehen und durchaus weiter hierin zu lesen.

---

Ich glaube, ich könnte insertBefore und insertAfter gebrauchen.

Und vielleicht kann man sogar ganz auf das manuelle schneiden von dem
Code string verzichten und alles im Rahmen des plugins machen, denn in
dem kann ich ja auch ganz entspannt sagen: Vor dieser Zeile bitte
nicht.

---

Also, ich muss lernen, diese Definitionen zu lesen, grundsätzlich
alles so zu machen, wie es das Handbuch empfiehlt: Um nodes zu bauen,
nutze ich die builder Methoden, die auf dem types Objekt liegen und
für jede Art von Node existieren.

Um zu wissen, was genau diese Builder für Parameter übergeben haben
wollen, lese ich nicht nur

https://babeljs.io/docs/en/babel-types

sondern auch die Definitionen selbst:

https://github.com/babel/babel/blob/master/packages/babel-parser/ast/spec.md

---

Also, ich bin schon sehr nah dran.

Der Code würde schon laufen, es fehlen nur noch die Semikolons und
richtigen Anführungszeichen.

Das müsste Babel irgendwo als Option automatisch einstellbar
bereithaben.

---

Siehe hier: https://babeljs.io/docs/en/plugins

Ich nutze ja schon jetzt traverse, und dem müsste ich dann einfach
noch ein OptionenModul übergeben.

---

Es sieht so aus, als wurde die "quotes" Option aus den babel options
rausgenommen, weil es ja eh nur um production geht. Dafür soll man,
wie ich jetzt glaube, prettier oder eben eslint nutzen.

Okay, okay.

https://github.com/babel/babel/pull/5154

---

Oder es geht vielleicht doch? Aber erst mit dem sog. babel-generator?

---

Hm, es braucht wohl prettier.

Und es müsste: Eine Option, irgendwo eine config file herumliegend,
gesucht werden und wenn es die gibt, dann die nehmen, und wenn nicht
dann default einstellungen.

https://prettier.io/docs/en/options.html

